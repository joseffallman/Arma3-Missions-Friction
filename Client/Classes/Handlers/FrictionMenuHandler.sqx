/*
 * Name:    FrictionMenuHandler
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Encapsulates all logic for the Friction Menu.
 */

using Mission.Common;
using Mission.Communication;
using Mission.Client.Statics;

namespace Mission.Client
{
	public class FrictionMenuHandler
	{
        // Initializes the Friction Menu for the player and adds the "Open Mission Menu" action.
        public static method Init()
        {
        	call _self.UpdateVisibleOptions;
			call _self.BuildFrictionMenu;
			
			call _self.ShowAction;
		};
		
		public static method ShowAction()
		{
			player addAction ["<t color='#AAAAFF'>Open Mission Menu</t>", { call _self.Open; }];
		};
		
		#region Option Properties
		
		public static property Boolean OptionPerformInsertionVisible { get; private set; };
		
		#endregion
		
		#region Show Methods
		
		private static method ShowOptionPerformInsertion("_show" as Boolean)
		{
			if (_show != _self.OptionPerformInsertionVisible) then {
				_self.OptionPerformInsertionVisible = _show;
				call _self.BuildFrictionMenu;
			};
		};
		

		#endregion
		
		#region Methods
		
		public static method UpdateVisibleOptions()
		{
			private ["_playerGroupHasInserted" as Boolean];
			
			_playerGroupHasInserted = false;
			
			if (playerSide == west) then {
				_playerGroupHasInserted = call PublicVariableHandler.GetWestHasInserted;
			}
			else {
				_playerGroupHasInserted = call PublicVariableHandler.GetEastHasInserted;
			};
			
			_self.OptionPerformInsertionVisible = !_playerGroupHasInserted;
			
			call _self.BuildFrictionMenu;
		};
		
		private static method BuildFrictionMenu()
		{
			FRICTION_FrictionMenu = 
			[
			  ["Mission Menu", true]
			];
			
			if (_self.OptionPerformInsertionVisible) then {
				FRICTION_FrictionMenu pushBack ["Perform Insertion", [0], "", -5, [["expression", "call Mission_Client_FrictionMenuHandler_OnPerformInsertion"]], "1", "1"];
			};
		};
		
		// Opens the Friction menu for the current player.
		public static method Open()
		{
			showCommandingMenu "#USER:FRICTION_FrictionMenu";
		};
		
		#endregion
		
		#region Option Event Handlers
		
		// Called when the local player selects the "PerformInsertion" option.
		private static method OnPerformInsertion()
		{
			private ["_missionMarkersInfo" as MissionMarkersInfo];
			
			if (call PublicVariableHandler.HasValueMissionMarkersInfo) then
			{
				_missionMarkersInfo = call PublicVariableHandler.GetMissionMarkersInfo;
				
				[[playerSide] call _missionMarkersInfo.GetStartMarkersBySide] call ClientObjects.PerformInsertionService.Reset;
				
				call ClientObjects.PerformInsertionService.RunAsync;
			};
		};
		
		#endregion
	};
};
