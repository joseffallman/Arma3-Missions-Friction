/*
 * Name:	VehicleTypeHandler
 * Date:	2020-07-04
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles vehicle types for both sides.
 */
namespace Mission.Server
{
	public class SoldierTypeDictionary
	{
		private fields ["_mSoldierTypes" as Array /* of VehicleSideAlias */];
		
		// Creates a VehicleTypeHandler object.
		public constructor()
		{
			_mSoldierTypes = [
				["RIFLEMAN", "B_Soldier_F", "O_Soldier_F", "I_G_Soldier_F"] new VehicleSideAlias
			];
		};
		
		public method AddEntry("_alias" as String, "_westVehicleType" as String, "_eastVehicleType" as String, "_guerillaVehicleType" as String)
		{
			_mSoldierTypes pushBack [_alias, _westVehicleType, _eastVehicleType, _guerillaVehicleType] new VehicleSideAlias;
		};
		
		public method String GetSoldierType("_alias" as String, "_side" as Side)
		{
			{
				if (_x.Name == _alias) then {
					return [_side] call _x.GetVehicleType;
				};
			} foreach _mSoldierTypes as VehicleSideAlias;
			
			return "";
		};
	};
};
